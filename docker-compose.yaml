version: "3.5"
services:

  db:
    image: postgres:13-alpine
    env_file:
      ./.env
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always

  admin-panel:
    build:
      context: .
      dockerfile: Dockerfile-admin-panel
    volumes:
      - admin_static_volume:/admin_panel/config/staticfiles
    env_file:
      - ./.env
    depends_on:
      - db
    restart: always

  sqlite-to-postgres:
    build:
      context: .
      dockerfile: Dockerfile-sqlite-to-postgres
    env_file:
      - ./.env
    depends_on:
      - db
      - admin-panel

  api:
    build:
      context: .
      dockerfile: Dockerfile-billing-api
    volumes:
      - ./billing_api:/billing_api
    env_file:
      - ./.env
    ports:
      - "8008:8008"
    depends_on:
      - db
      - admin-panel


  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - admin_static_volume:/admin_panel/config/staticfiles
    ports:
      - "80:80"
    depends_on:
      - admin-panel
    restart: always

  auth:
    build:
      context: .
      dockerfile: Dockerfile-auth
    volumes:
      - ./auth:/auth
    env_file:
      - ./.env
    ports:
      - "8001:8001"
    depends_on:
      - db
      - redis

#
#  auth-db:
#    image: postgres:13-alpine
#    env_file:
#      ./.env
#    volumes:
#      - auth_postgres_data:/var/lib/postgresql/data
#      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
#
  redis:
    image: redis
    volumes:
      - redis_data:/data


volumes:
  pg_data:
  admin_static_volume:
  redis_data: